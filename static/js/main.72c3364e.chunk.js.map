{"version":3,"sources":["reducers/tripsReducer.js","reducers/index.js","store/index.js","components/Header.js","firebase/firebase.js","actions/index.js","components/Error.js","components/NewTrip.js","components/TripsList.js","components/AlreadyExist.js","components/AllTrips.js","components/NewPlan.js","components/Plan.js","components/TripDetails.js","components/App.js","index.js"],"names":["initialState","allTrips","tripsDetails","combineReducers","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","Header","className","to","PUBLIC_FIREBASE_PROJECT_ID","config","apiKey","authDomain","databaseURL","projectId","firebase","initializeApp","db","database","getAllPlans","country","newCountryPlansArray","dispatch","fetch","then","response","json","data","Object","values","map","plan","index","keys","getAllTrips","newCountryArray","Error","input","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","NewTrip","setAddNewTrip","setIsExist","history","useHistory","useState","countryName","setCountryName","countryList","useSelector","errorFlag","setErrorFlag","createNewTrip","e","preventDefault","test","obj","includes","console","log","setTimeout","push","method","body","JSON","stringify","onClick","onSubmit","htmlFor","TextField","size","id","label","variant","value","onChange","target","Button","color","TripsList","useDispatch","trip","toUpperCase","key","ref","remove","AlreadyExist","AllTrips","addNewTrip","countryKey","isExist","showMessage","setShowMessage","useEffect","messageToDisplay","split","interval","setInterval","length","slice","clearInterval","displayMessage","NewPlan","setAddPlan","classes","useParams","newPlane","setNewPlane","day","setDay","checkInput","postNewCountryPlan","FormControl","formControl","InputLabel","Select","native","inputProps","name","rows","column","Plan","planKey","TripDetails","addPlan","currentPlan","App","path","exact","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.72c3364e.chunk.js","sourcesContent":["const initialState = {\r\n    allTrips: [],\r\n    tripsDetails: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_TRIPS\":\r\n            return { ...state, allTrips: action.payload };\r\n        case \"SET_COUNTRY_TO_PLAN\":\r\n            return { ...state, tripsDetails: action.payload };\r\n        case \"SET_TRIP_DETAILS\":\r\n            return { ...state, tripsDetails: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport tripsReducer from './tripsReducer';\r\n\r\nexport default combineReducers({\r\n    allTrips: tripsReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// store.subscribe(() => {\r\n//     console.log(\"store changed!\", store.getState());\r\n// })","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navigation-bar\">\r\n            <Link to=\"/\">\r\n                <div className=\"logo\" ></div>\r\n            </Link >\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/database\";\r\n\r\nconst PUBLIC_FIREBASE_API_KEY = \"AIzaSyCs3eyZ_wHYtq4OJj3GY5a0KDVb9vuT88E\";\r\nconst PUBLIC_FIREBASE_PROJECT_ID = \"triplan-1cab8\";\r\n\r\nconst config = {\r\n    apiKey: PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: `${PUBLIC_FIREBASE_PROJECT_ID}.firebaseapp.com`,\r\n    databaseURL: `https://${PUBLIC_FIREBASE_PROJECT_ID}-default-rtdb.firebaseio.com`,\r\n    projectId: PUBLIC_FIREBASE_PROJECT_ID,\r\n};\r\n\r\nfunction initFirebase() {\r\n    firebase.initializeApp(config)\r\n}\r\n\r\ninitFirebase();\r\nexport { firebase }","import { firebase } from '../firebase/firebase';\r\nconst db = firebase.database();\r\n\r\n\r\nexport const postNewTrip = (country) => {\r\n    fetch(\"https://triplan-1cab8-default-rtdb.firebaseio.com/all-trips.json\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ country: country })\r\n    })\r\n}\r\n\r\nexport const postNewCountryPlan = (country, day, plan) => {\r\n    let obj = {};\r\n    let id = day;\r\n    obj[id] = plan\r\n    fetch(`https://triplan-1cab8-default-rtdb.firebaseio.com/${country}.json`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj)\r\n    })\r\n}\r\n\r\nexport const getAllPlans = (country) => {\r\n    let newCountryPlansArray = [];\r\n    return (dispatch) => {\r\n        fetch(`https://triplan-1cab8-default-rtdb.firebaseio.com/${country}.json`)\r\n            .then(response => { return response.json() })\r\n            .then(data => {\r\n                if (data) {\r\n                    newCountryPlansArray = Object.values(data).map((plan, index) => {\r\n                        plan['key'] = Object.keys(data)[index]\r\n                        return plan\r\n                    })\r\n                }\r\n                data ?\r\n                    dispatch({\r\n                        type: \"SET_TRIP_DETAILS\",\r\n                        payload: newCountryPlansArray\r\n\r\n                    }) :\r\n                    dispatch({\r\n                        type: \"SET_TRIP_DETAILS\",\r\n                        payload: [],\r\n                    });\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getAllTrips = () => {\r\n    let newCountryArray = []\r\n    return (dispatch) => {\r\n        fetch(\"https://triplan-1cab8-default-rtdb.firebaseio.com/all-trips.json\")\r\n            .then(response => { return response.json() })\r\n            .then(data => {\r\n                if (data) {\r\n                    newCountryArray = Object.values(data).map((country, index) => {\r\n                        country['key'] = Object.keys(data)[index]\r\n                        return country\r\n                    })\r\n                }\r\n                data ?\r\n                    dispatch({ type: \"SET_TRIPS\", payload: newCountryArray })\r\n                    :\r\n                    dispatch({ type: \"SET_TRIPS\", payload: [] });\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCountry = (key, country) => {\r\n    return (dispatch) => {\r\n        db.ref(`all-trips/${key}`).remove();\r\n        db.ref(country).remove();\r\n        setTimeout(function () {\r\n            dispatch(getAllTrips())\r\n        }, 600)\r\n\r\n    }\r\n}\r\n\r\nexport const deletePlane = (country, key) => {\r\n    return (dispatch) => {\r\n        db.ref(`${country}/${key}`).remove();\r\n        setTimeout(function () {\r\n            dispatch(getAllPlans(country))\r\n        }, 800)\r\n\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/error.css';\r\n\r\nfunction Error({ input }) {\r\n    return (\r\n        <>\r\n            {input === 'invalidString' ? <div className=\"error__container\"> Wrong inputs.<br />Please try again..</div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { postNewTrip } from '../actions';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Error from './Error';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../styles/new-trip.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst NewTrip = ({ setAddNewTrip, setIsExist }) => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [countryName, setCountryName] = useState('');\r\n    const countryList = useSelector(state => state.allTrips.allTrips);\r\n    const [errorFlag, setErrorFlag] = useState(false);\r\n\r\n    const createNewTrip = (e) => {\r\n        e.preventDefault()\r\n        if (!/^[a-zA-Z]+$/.test(countryName)) {\r\n            setErrorFlag(true)\r\n            setTimeout(() => {\r\n                setErrorFlag(false)\r\n            }, 4000);\r\n        } else {\r\n            if (!countryList.map((obj) => obj['country']).includes(countryName)) {\r\n                postNewTrip(countryName);\r\n                history.push(`/${countryName}`)\r\n            } else {\r\n                console.log(\"country already exist\");\r\n                setAddNewTrip(false)\r\n                setIsExist(true)\r\n\r\n                setTimeout(function () {\r\n                    setIsExist(false)\r\n                    history.push(`/${countryName}`)\r\n                }, 3000)\r\n\r\n                setTimeout(() => {\r\n                    console.log(\"cancel\");\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"new-trip__container\" >\r\n            <div className=\"close-from-outside\" onClick={() => setAddNewTrip(false)} ></div>\r\n            <div className=\"new-trip__form-container\">\r\n                <i className=\"window close icon\" onClick={() => setAddNewTrip(false)}></i>\r\n                <h1 className=\"new-trip__form-header\" >Start to Plan!</h1>\r\n                <form className=\"new-trip__form\" onSubmit={(e) => createNewTrip(e)}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>\r\n                                    <h1 className=\"new-trip__form-country\" htmlFor=\"country\">Country: </h1>\r\n                                </th>\r\n                                <th>\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Country\"\r\n                                        variant=\"outlined\"\r\n                                        value={countryName}\r\n                                        onChange={(e) => setCountryName(e.target.value)}\r\n                                    />\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th></th>\r\n                                <div className=\"input_note\">\r\n                                    *Please insert only letters\r\n                                </div>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </form>\r\n                {errorFlag ? <Error input={'invalidString'} /> : null}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NewTrip;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteCountry } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/trips-list.css';\r\n\r\nconst TripsList = () => {\r\n    const dispatch = useDispatch()\r\n    const allTrips = useSelector(state => state.allTrips.allTrips)\r\n    return (\r\n        <div className=\"trips-list__container\">\r\n            {allTrips.map((trip) => {\r\n                return (\r\n                    <div className=\"trip__container\" key={trip.key}>\r\n                        <Link to={`/${trip.country}`}>\r\n                            <div className=\"trip_details\">\r\n                                <span>{trip.country.toUpperCase()}</span>\r\n                            </div>\r\n                        </Link>\r\n                        <button\r\n                            className=\"trip_delete-button\"\r\n                            onClick={() => dispatch(deleteCountry(trip.key, trip.country))}\r\n                        >DELETE\r\n                        </button>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TripsList;\r\n","import React from 'react';\r\nimport '../styles/already-exist.css';\r\n\r\nconst AlreadyExist = () => {\r\n    return (\r\n        <div className=\"already-exist__container\">\r\n            <div className=\"already-exist\">\r\n                <h1 > There is already country with that name...</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlreadyExist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTrips } from '../actions';\r\nimport NewTrip from './NewTrip';\r\nimport TripsList from './TripsList';\r\nimport AlreadyExist from './AlreadyExist.js';\r\nimport '../styles/all-trips.css';\r\n\r\n\r\nconst AllTrips = () => {\r\n    const [addNewTrip, setAddNewTrip] = useState(false);\r\n    const allTrips = useSelector(state => state.allTrips.allTrips);\r\n    const countryKey = useSelector(state => state.allTrips.countryKey);\r\n    const [isExist, setIsExist] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const message = 'Lets  start ! choose your first Country that you  want to plan...';\r\n    const [showMessage, setShowMessage] = useState('')\r\n    useEffect(() => {\r\n        dispatch(getAllTrips());\r\n\r\n        const displayMessage = () => {\r\n            const messageToDisplay = message.split('')\r\n            let index = 0;\r\n\r\n            const interval = setInterval(() => {\r\n                if (index !== messageToDisplay.length) {\r\n                    setShowMessage(messageToDisplay.slice(0, index + 1))\r\n                    ++index\r\n                } else {\r\n                    clearInterval(interval)\r\n                }\r\n            }, 50);\r\n        }\r\n        displayMessage()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"all-trips__container\">\r\n            {allTrips.length === 0 ? null : <h2 className=\"all-trips__header\">Another country? Add it!</h2>}\r\n            <button\r\n                onClick={() => setAddNewTrip(true)}\r\n                className=\"add-trip__icon\">\r\n\r\n                <h2 className=\"all-trips__second\">Add Country </h2>\r\n                {/* <i className=\"plus icon\"></i> */}\r\n            </button>\r\n            {addNewTrip ?\r\n                <NewTrip setAddNewTrip={setAddNewTrip} setIsExist={setIsExist} />\r\n                : null}\r\n            {allTrips ? <TripsList countryKey={countryKey} /> : null}\r\n            {isExist ? < AlreadyExist /> : null}\r\n            {allTrips.length === 0 ? <h1 className=\"all-trips_message\">{showMessage}</h1> : null}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AllTrips;\r\n","import React, { useState } from 'react';\r\nimport { postNewCountryPlan } from '../actions'\r\nimport { useParams } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../styles/new-plan.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst NewPlan = ({ setAddPlan }) => {\r\n    const classes = useStyles();\r\n    const { countryName } = useParams();\r\n    const [newPlane, setNewPlane] = useState('');\r\n    const [day, setDay] = useState('Sunday');\r\n    const [errorFlag, setErrorFlag] = useState(false);\r\n\r\n    const checkInput = (e) => {\r\n        e.preventDefault();\r\n        if ((newPlane) === '') {\r\n            setErrorFlag(true);\r\n        } else {\r\n            if (errorFlag) setAddPlan(false)\r\n            setAddPlan(false);\r\n            postNewCountryPlan(countryName, day, newPlane);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-plan__container\" >\r\n            <div className=\"new-plan__form-container\">\r\n                <i className=\"window close icon\" onClick={() => setAddPlan(false)}></i>\r\n                <h2 className=\"new-plan__header\">New Plan</h2>\r\n                <form className=\"new-trip__form\" onSubmit={(e) => checkInput(e)}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>\r\n                                    <h1 className=\"new-plan__h1\" htmlFor=\"country\">Day: </h1>\r\n                                </th>\r\n                                <th>\r\n                                    <FormControl variant=\"filled\" className={classes.formControl}>\r\n                                        <InputLabel htmlFor=\"filled-age-native-simple\">Day</InputLabel>\r\n                                        <Select\r\n                                            native\r\n                                            value={day}\r\n                                            onChange={(e) => { setDay(e.target.value) }}\r\n                                            inputProps={{\r\n                                                name: 'Sunday',\r\n                                            }}\r\n                                        >\r\n                                            <option value={'Sunday'}>Sunday</option>\r\n                                            <option value={'Monday'}>Monday</option>\r\n                                            <option value={'Tuesday'}>Tuesday</option>\r\n                                            <option value={'Wednesday'}>Wednesday</option>\r\n                                            <option value={'Thursday'}>Thursday</option>\r\n                                            <option value={'Friday'}>Friday</option>\r\n                                            <option value={'Saturday'}>Saturday</option>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </th>\r\n                            </tr>\r\n                            <br />\r\n                            <tr>\r\n                                <th>\r\n                                    <h1 className=\"new-plan__h1\" htmlFor=\"country\">Plan: </h1>\r\n                                </th>\r\n                                <th>\r\n                                    <textarea\r\n                                        className=\"textarea-container\"\r\n                                        rows=\"4\" column=\"50\"\r\n                                        onChange={(e) => setNewPlane(e.target.value)}\r\n                                    >\r\n                                    </textarea>\r\n                                </th>\r\n                                <th>\r\n                                    {errorFlag ? <span className=\"error_message\">Cannot be empty</span> : null}\r\n                                </th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NewPlan;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePlane } from '../actions';\r\nimport '../styles/plan.css';\r\n\r\nconst Plan = ({ plan, id, countryName, planKey }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"plan__container\">\r\n            <section>\r\n                <h1 className=\"plan__day\">{id}</h1>\r\n                <h2 className=\"plan__plan-details\">{plan}</h2>\r\n            </section>\r\n            <button\r\n                className=\"plan__delete-button\"\r\n                onClick={() => { dispatch(deletePlane(countryName, planKey)) }}\r\n            >DELETE\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Plan;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllPlans } from '../actions';\r\nimport { useParams } from 'react-router-dom';\r\nimport NewPlan from './NewPlan';\r\nimport Plan from './Plan';\r\nimport '../styles/trip-details.css';\r\n\r\n\r\nconst TripDetails = () => {\r\n    const dispatch = useDispatch();\r\n    const { countryName } = useParams();\r\n    const tripsDetails = useSelector(state => state.allTrips.tripsDetails);\r\n    const [addPlan, setAddPlan] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            dispatch(getAllPlans(countryName));\r\n        }, 300)\r\n    }, [addPlan])\r\n\r\n    return (\r\n        <div className=\"trip-details__container\">\r\n            <div className=\"trip-details__header\">\r\n                <h1 className=\"trip-details__country\">{countryName.toUpperCase()}</h1>\r\n            </div>\r\n            <button\r\n                className=\"add-trip__icon\"\r\n                onClick={() => setAddPlan(!addPlan)}\r\n            >\r\n                <h2 className=\"all-trips__second\">Add Plan {addPlan ? <i className=\"x icon\"></i> : <i className='plus icon'></i>} </h2>\r\n            </button>\r\n\r\n            {addPlan ? <NewPlan setAddPlan={setAddPlan} /> : null}\r\n            {tripsDetails.length !== 0 ? tripsDetails.map((currentPlan) => {\r\n                let key = Object.keys(currentPlan)[0];\r\n                let plan = Object.values(currentPlan)[0]\r\n                return (\r\n                    <Plan key={key} id={key} planKey={currentPlan['key']} plan={plan} countryName={countryName} />\r\n                )\r\n            }) : null}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TripDetails;\r\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from './Header';\nimport AllTrips from './AllTrips.js';\nimport TripDetails from './TripDetails.js';\nimport '../styles/app.css';\n\nfunction App() {\n\n  return (\n    <div>\n      <Header />\n      <div className=\"page-container\">\n        <Switch>\n          <Route path=\"/\" exact component={AllTrips} />\n          <Route path=\"/:countryName\" exact component={TripDetails} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App.js';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}